<?php

/*
** Add cron task
*/
function dribbble_sync_cron(){
	dribbble_sync_get_shots();
}

/*
** Fetch Dribbble shots via Dribbble api
*/
function dribbble_sync_get_shots(){
	// grab Dribbble username
	$username = variable_get('dribbble_sync_username', '');
	// if Dribbble username exists
	if(!empty($username)) {
		$returned_content = dribbble_sync_get_data('http://api.dribbble.com/players/' . $username . '/shots');
		$results = json_decode($returned_content);
		$shots = $results->shots;
		// iterate through photos and insert into database
		foreach ($shots as $shot) {
			// check to see if photo already exists in database
			$photo_check = db_query("SELECT shot_id FROM {dribbble_sync} WHERE shot_id = '" . $shot->id . "'");
			
			if($photo_check->rowCount() == 0){ // photo is not in database
				$insert_record = array(
					'shot_id' => $shot->id,
					'shot_title' => $shot->title,
					'shot_url' => $shot->image_url,
					'shot_short_url' => $shot->short_url,
					'shot_created' => $shot->created_at
				);
				
				$t_db_insert = drupal_write_record('dribbble_sync', $insert_record);
			}
		}
	}
}

/* gets the data from a URL */
function dribbble_sync_get_data($url) {
	$ch = curl_init();
	$timeout = 5;
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
	$data = curl_exec($ch);
	curl_close($ch);
	return $data;
}

// render function to print out Dribbble shots
function dribble_sync_render() {
	$return_html = '';
	$limit = variable_get('dribbble_sync_display', '10');
	$shots = db_query("SELECT * FROM {dribbble_sync} ORDER BY shot_id DESC LIMIT $limit");
	
	if($shots->rowCount() != 0) { // there are shots
		$return_html .= '<div class="dribbble-shots clearfix">';
		foreach ($shots as $shot) {
			$return_html .= '<div class="dribbble-shot"><a href="' . $shot->shot_short_url . '" target="_blank" class="clearfix"><img src="' . $shot->shot_url . '" alt="' . $shot->shot_title . '" title="' . $shot->shot_title . '" /></a></div>';
		}
		$return_html .= '</div>';
	} else {
		$return_html .= '<div class="dribbble-shots-empty">No Dribbble shots are available</div>';
	}
	
	return $return_html;
}

/*
** Implement menu hook
*/
function dribbble_sync_menu(){
	// testing page - going to this URL will sync posts
	$items['tests/data-sync'] = array(
		'page callback' => 'dribbble_sync_get_shots',
		'access arguments' => TRUE,
		'access callback' => TRUE,
		'type' => MENU_CALLBACK,
  );
  
  // Create admin page
  $items['admin/config/services/dribbble_sync'] = array(
		'title' => 'Dribbble Sync',
	  'description' => 'Configuration for Dribbble Sync module',
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('dribbble_sync_settings'),
	  'access arguments' => array('access administration pages'),
	  'type' => MENU_NORMAL_ITEM,
  );
	
	return $items;
}

/*
** Handle admin page callback
*/
function dribbble_sync_settings($form, &$form_state) {
	
	$form['dribbble_sync_username'] = array(
    	'#type' => 'textfield',
    	'#title' => t('Dribbble username.'),
    	'#default_value' => variable_get('dribbble_sync_username', ''),
    	'#size' => 60,
    	'#maxlength' => 80,
    	'#description' => t('Your username is found in the URL of your landing page after http://www.dribbble.com/. For example, kevingordon is the username for this user\'s page: http://www.dribbble.com/kevingordon.'),
    	'#required' => TRUE,
    );
    
    $form['dribbble_sync_display'] = array(
    	'#type' => 'textfield',
    	'#title' => t('Number of shots'),
    	'#default_value' => variable_get('dribbble_sync_display', '10'),
    	'#size' => 20,
    	'#maxlength' => 5,
    	'#description' => t('Enter the number of posts you want displayed'),
    	'#required' => TRUE,
    );

    return system_settings_form($form);
}

/**
* Implements hook_block_info().
*/

function dribbble_sync_block_info() {
  $blocks = array();
  $blocks['dribbble_sync'] = array(
    'info' => t('Dribble Sync'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
* Implements hook_block_view().
*/

function dribbble_sync_block_view($block_name = '') {
  if ($block_name == 'dribbble_sync') {
    
    $return_html = '';
	$limit = variable_get('dribbble_sync_display', '10');
	$shots = db_query("SELECT * FROM {dribbble_sync} ORDER BY shot_id DESC LIMIT $limit");
	
	if($shots->rowCount() != 0) { // there are shots
		$return_html .= '<div class="dribbble-shots clearfix">';
		foreach ($shots as $shot) {
			$return_html .= '<div class="dribbble-shot"><a href="' . $shot->shot_short_url . '" target="_blank" class="clearfix"><img src="' . $shot->shot_url . '" alt="' . $shot->shot_title . '" title="' . $shot->shot_title . '" /></a></div>';
		}
		$return_html .= '</div>';
	} else {
		$return_html .= '<div class="dribbble-shots-empty">No Dribbble shots are available</div>';
	}
	
    $block = array(
      'content' => $return_html,
    );
    
    return $block;
  }
}